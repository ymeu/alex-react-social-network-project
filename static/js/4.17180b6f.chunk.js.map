{"version":3,"sources":["components/messages/messages.module.css","components/HOC/withAuthRedirect.jsx","components/messages/dialogItem/dialogItem.jsx","components/messages/message/messageItem.jsx","components/messages/messages.jsx","components/messages/messagesContainer.jsx"],"names":["module","exports","mapStateForRedirectToProps","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","DialogItem","path","id","className","classes","dialog","active","name","MessageItem","message","maxLength30","maxLengthCreator","AddReduxMessageForm","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","required","placeholder","textarea","sendButton","Messages","dialogsElements","messagesPage","dialogs","map","d","key","messageElements","messages","m","dialogItems","values","sendMessage","newMessageBody","compose","dispatch","sendMessageCreator"],"mappings":"+FACAA,EAAOC,QAAU,CAAC,QAAU,0BAA0B,YAAc,8BAA8B,OAAS,yBAAyB,OAAS,yBAAyB,SAAW,2BAA2B,SAAW,2BAA2B,WAAa,+B,sICG3PC,EAA6B,SAACC,GAAD,MAAY,CAAEC,OAAQD,EAAME,KAAKD,SAErDE,EAAmB,SAACC,GAAe,IACtCC,EADqC,uKAGnC,OAAKC,KAAKC,MAAMN,OACT,kBAACG,EAAcE,KAAKC,OADI,kBAAC,IAAD,CAAUC,GAAG,cAHT,GACXC,IAAML,WAQtC,OAFqCM,YAASX,EAATW,CAAqCL,K,+FCC/DM,EAVI,SAACJ,GAChB,IAAIK,EAAO,aAAeL,EAAMM,GAEhC,OACI,yBAAKC,UAAWC,IAAQC,OAAS,IAAMD,IAAQE,QAC3C,kBAAC,IAAD,CAAST,GAAII,GAAOL,EAAMW,QCDvBC,EAJK,SAACZ,GACjB,OAAO,yBAAKO,UAAWC,IAAQK,SAAUb,EAAMa,U,kCCI/CC,EAAcC,YAAiB,IAwC7BC,EAAsBC,YAAU,CACtCC,KAAM,kBADsBD,EAhBL,SAACjB,GAEpB,OACI,0BAAMmB,SAAUnB,EAAMoB,cAClB,kBAACC,EAAA,EAAD,CACIV,KAAK,iBACLW,UAAWC,IACXC,SAAU,CAACC,IAAUX,GACrBY,YAAY,qBACZnB,UAAWC,IAAQmB,WACvB,4BAAQpB,UAAWC,IAAQoB,YAA3B,oBAUGC,EA1CE,SAAC7B,GAEd,IAAI8B,EAAkB9B,EAAM+B,aAAaC,QAAQC,KAAI,SAAAC,GAAC,OAAI,kBAAC,EAAD,CAAYvB,KAAMuB,EAAEvB,KAAML,GAAI4B,EAAE5B,GAAI6B,IAAKD,EAAE5B,QACjG8B,EAAkBpC,EAAM+B,aAAaM,SAASJ,KAAI,SAAAK,GAAC,OAAI,kBAAC,EAAD,CAAazB,QAASyB,EAAEzB,QAASsB,IAAKG,EAAEhC,QAMnG,OACI,yBAAKC,UAAWC,IAAQwB,SACpB,yBAAKzB,UAAWC,IAAQ+B,aACnBT,GAEL,yBAAKvB,UAAWC,IAAQ6B,UACnBD,EACD,kBAACpB,EAAD,CAAqBG,SAXb,SAACqB,GACjBxC,EAAMyC,YAAYD,EAAOE,sB,wBCIlBC,sBACXxC,aAfkB,SAACV,GACnB,MAAO,CACHsC,aAActC,EAAMsC,iBAIH,SAACa,GACtB,MAAO,CACHH,YAAa,SAACC,GACVE,EAASC,YAAmBH,SAOpC9C,IAFW+C,CAGbd","file":"static/js/4.17180b6f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"messages_dialogs__WDDgT\",\"dialogItems\":\"messages_dialogItems__1n-_D\",\"dialog\":\"messages_dialog__2pGul\",\"active\":\"messages_active__2ah7g\",\"messages\":\"messages_messages__34oTo\",\"textarea\":\"messages_textarea__2ja7x\",\"sendButton\":\"messages_sendButton__2DzPb\"};","import React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nlet mapStateForRedirectToProps = (state) => ({ isAuth: state.auth.isAuth })\n\nexport const withAuthRedirect = (Component) => {\n    class RedirectComponent extends React.Component {\n        render() {\n            if (!this.props.isAuth) return <Redirect to='login' />\n            return <Component {...this.props} />\n        }\n    }\n    let ConnectedAuthRedirectComponent = connect (mapStateForRedirectToProps)(RedirectComponent)\n\n    return ConnectedAuthRedirectComponent;\n}","import React from 'react';\nimport classes from './../messages.module.css';\nimport { NavLink } from 'react-router-dom';\n\nconst DialogItem = (props) => {\n    let path = '/messages/' + props.id;\n\n    return (\n        <div className={classes.dialog + ' ' + classes.active}>\n            <NavLink to={path}>{props.name}</NavLink>\n        </div>\n    );\n}\n\nexport default DialogItem;\n\n","import React from 'react';\nimport classes from './../messages.module.css';\n\n\nconst MessageItem = (props) => {\n    return <div className={classes.message}>{props.message}</div>\n}\n\nexport default MessageItem;\n\n","import React from 'react';\nimport classes from './messages.module.css';\nimport DialogItem from './dialogItem/dialogItem';\nimport MessageItem from './message/messageItem';\nimport { Field, reduxForm } from 'redux-form';\nimport { Textarea } from '../common/formsControls/formsControls';\nimport { required, maxLengthCreator } from '../../utilities/validators/validators';\n\n\nlet maxLength30 = maxLengthCreator(30);\n\nconst Messages = (props) => {\n\n    let dialogsElements = props.messagesPage.dialogs.map(d => <DialogItem name={d.name} id={d.id} key={d.id} />);\n    let messageElements = props.messagesPage.messages.map(m => <MessageItem message={m.message} key={m.id} />);\n    \n    let addNewMessage = (values) => {\n        props.sendMessage(values.newMessageBody);\n    }\n\n    return (\n        <div className={classes.dialogs}>\n            <div className={classes.dialogItems}>\n                {dialogsElements}\n            </div>\n            <div className={classes.messages}>\n                {messageElements}\n                <AddReduxMessageForm onSubmit={addNewMessage} />\n            </div>\n        </div>\n    )\n}\n\nconst AddMessageForm = (props) => {\n\n    return (\n        <form onSubmit={props.handleSubmit}>\n            <Field\n                name='newMessageBody'\n                component={Textarea}\n                validate={[required, maxLength30]}\n                placeholder='Enter your message'\n                className={classes.textarea} />\n            <button className={classes.sendButton}>Send Message</button>\n        </form>\n    )\n\n}\n\nconst AddReduxMessageForm = reduxForm({\nform: 'addMessageForm'\n})(AddMessageForm)\n\nexport default Messages;\n\n","import { sendMessageCreator } from '../../redux/messagesReducer';\nimport Messages from './messages';\nimport { connect } from 'react-redux';\nimport { withAuthRedirect } from '../HOC/withAuthRedirect';\nimport { compose } from 'redux';\n\n\nlet mapStateToProps = (state) => {\n    return {\n        messagesPage: state.messagesPage\n    }\n}\n\nlet mapDispatchToProps = (dispatch) => {\n    return {\n        sendMessage: (newMessageBody) => {\n            dispatch(sendMessageCreator(newMessageBody));\n        }\n    }\n}\n\nexport default compose(\n    connect(mapStateToProps, mapDispatchToProps),\n    withAuthRedirect\n)(Messages);\n"],"sourceRoot":""}